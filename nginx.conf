# worker_processes 1;

# user nobody nogroup;
# # 'user nobody nobody;' for systems with 'nobody' as a group instead
# error_log  /var/log/nginx/error.log warn;
# pid /var/run/nginx.pid;

# events {
#   # increase if you have lots of clients
#   worker_connections 1024; 
#    # set to 'on' if nginx worker_processes > 1
#   accept_mutex off;
#   # 'use epoll;' to enable for Linux 2.6+
#   # 'use kqueue;' to enable for FreeBSD, OSX
# }

# http {
#   include mime.types;
#   # fallback in case we can't determine a type
#   default_type application/octet-stream;
#   access_log /var/log/nginx/access.log combined;
#   sendfile on;

#   upstream app_server {
#     # fail_timeout=0 means we always retry an upstream even if it failed
#     # to return a good HTTP response

#     # for UNIX domain socket setups
#     server unix:/tmp/gunicorn.sock fail_timeout=0;

#     # for a TCP configuration
#     # server 192.168.0.7:8000 fail_timeout=0;
#   }

#   server {
#     # if no Host match, close the connection to prevent host spoofing
#     listen 80 default_server;
#     return 444;
#   }

#   server {
#     # use 'listen 80 deferred;' for Linux
#     # use 'listen 80 accept_filter=httpready;' for FreeBSD
#     listen 80;
#     client_max_body_size 4G;

#     # set the correct host(s) for your site
#     #example.com www.example.com;
#     server_name localhost;

#     keepalive_timeout 5;

#     # path for static files
#     root /path/to/app/current/public;

#     location /  {
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header X-Forwarded-Proto $scheme;
#       proxy_set_header Host $http_host;
#       # we don't want nginx trying to do something clever with
#       # redirects, we set the Host: header above already.
#       proxy_redirect off;
#       proxy_pass http://app_server;
#     }


#   }
# }

worker_processes 1;

user nobody nogroup;
error_log  /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024; 
    accept_mutex off;
}

http {
    include mime.types;
    default_type application/octet-stream;
    access_log /var/log/nginx/access.log combined;
    sendfile on;

    upstream app_server {
        server application:8000 fail_timeout=0;
    }

    server {
        listen 80;
        server_name site.nextzen.tech www.site.nextzen.tech ;

        client_max_body_size 4G;
        
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }


        location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_pass http://app_server;
        }

        
    }

    server {
        listen 443 default_server ssl http2;
        listen [::]:443 ssl http2;

        server_name site.nextzen.tech www.site.nextzen.tech;

        ssl_certificate /etc/nginx/ssl/live/site.nextzen.tech/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/site.nextzen.tech/privkey.pem;
        
        location / {
            proxy_pass http://app_server;
        }
}
}