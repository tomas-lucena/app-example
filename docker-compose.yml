version: '3.9'

services:
  certbot:
    image: certbot/certbot
    depends_on:
      - nginx
          
    volumes:
      - /var/certbot/www/:/var/www/certbot/
      - /var/certbot/conf/:/etc/letsencrypt/ssl/
    command: certonly --non-interactive --agree-tos -d site.nextzen.tech --email tomas.lucen2@gmail.com --webroot -w /var/www/certbot/  

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /var/certbot/www/:/var/www/certbot/
      - /var/certbot/conf/:/etc/nginx/ssl/
    depends_on:
      application:
          condition: service_healthy

    networks:
      - application-network

  application:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: application
    depends_on:
      database-postgres:
          condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 10s
      retries: 5

    expose:
      - "8000"
    networks:
      - application-network


  database-postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db
    networks:
      - application-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d db"]
      interval: 5s
      timeout: 10s
      retries: 5
      
          
networks:
  application-network:
    driver: bridge